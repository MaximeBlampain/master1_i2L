version: '3'

services:

  node:
    container_name: cooking_node
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./docker/node/Dockerfile
    env_file: .env
    environment:
      - NODE_ENV=development
      - LANG=fr_FR.UTF-8
    expose:
      - "3000"
    ports:
      - $API_PORT:$API_PORT
    links:
      - "db:db"
    depends_on:
      - db
    volumes:
      - "../back:/home/app"
      - "/home/app/node_modules"
    networks:
      - reverse-proxy

  react:
    container_name: cooking_react
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./docker/react/Dockerfile
    env_file: .env
    stdin_open: true
    environment:
      - LANG=fr_FR.UTF-8
      - REACT_APP_NODE_ENV=development
    expose:
      - "3001"
    ports:
      - $APP_PORT:$APP_PORT
    volumes:
      - "../front:/home/app"
      - "/home/app/node_modules"
    networks:
      - reverse-proxy

  db:
    container_name: cooking_user_db
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./docker/mysql/Dockerfile
    env_file: .env
    ports:
      - $BDD_PORT:3306
    environment:
      - MYSQL_DATABASE=$BDD_DATABASE
      - MYSQL_USER=$BDD_USER
      - MYSQL_PASSWORD=$BDD_PASSWORD
      - MYSQL_ROOT_PASSWORD=$BDD_ROOT_PASSWORD
    volumes:
      - "./.data/db:/var/lib/mysql"
      - "./mysql/mysql.cnf:/etc/mysql/conf.d/mysql.cnf"
      - "./mysql/mysql_error.log:/var/log/mysql/mysql_error.log"
    networks:
      - reverse-proxy


  mongobdd:
    container_name: cooking_db
    restart: unless-stopped
    build:
      context: ../
      dockerfile: ./docker/mongo/Dockerfile
    env_file: .env
    ports:
      - $MONGO_PORT:27017
    environment:
      - MONGO_INITDB_DATABASE=$MONGO_DATABASE
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
    volumes:
      - "./mongo/mongod.conf:/etc/mongod.conf"
      - "./mongo/mysql_error.log:/var/log/mongo/mysql_error.log"
    networks:
      - reverse-proxy

  mongo_seed:
    container_name: mongo_seed
    image: mongo:latest
    links:
      - mongobdd
    volumes:
      - ./mongo-seed:/mongo-seed
    command:
      'bash -c "mongoimport --db cooking -u cook -p cook123 --host cooking_db  --collection recettes --authenticationDatabase "admin" --jsonArray --file /mongo-seed/recettes.json"'
    networks:
      - reverse-proxy

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: password
    networks:
      - reverse-proxy

networks:
  reverse-proxy:
    external: true
